/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package twttr.reno1148.fridrichscrambler;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author theReno
 */
public class SessionSetupFrame extends javax.swing.JInternalFrame {
    
    private ArrayList<Integer> _selectedOlls = new ArrayList<Integer>(), 
                              _selectedPlls = new ArrayList<Integer>();
    private final String _ollHint = "<html><body><p align=\"justify\">All right, here's the deal:<br>choose the OLL patterns<br>you want to go over in this<br>\"session\""
                                 + ".<br><br>Not quite feeling like OLL<br>right now? Select none of<br>the elements in the list and<br>go set up PLL.</p></body></html>",
                         _pllHInt = "<html><body><p align=\"justify\">Done with OLL ha? Now choose<br>your PLL's please. This is<br>the last step before going<br>onto practice"
                                 + ".<br><br>If you want to skip PLL that's<br>OK. Select none of the<br>elements in the list and click<br>\"Begin practice\"</p></body></html>";
    private boolean _settingOll;
    
    public SessionSetupFrame() {
        initComponents();
        ((FlowLayout)pnlAlgorithms.getLayout()).setVgap(2);
        addOlls();
        _settingOll = true;
        btnRedoOll.setVisible(false);
    }
    /**
     * @return The OLL cases selected by the user.
     */
    public ArrayList<Integer> getSelectedOlls() {
        return _selectedOlls;
    }
    /**
     * @return The PLL cases selected by the user
     */
    public ArrayList<Integer> getSelectedPlls() {
        return _selectedPlls;
    }
    /**
     * Adds a selectable element to the scroll panel for every OLL case.
     */
    private void addOlls() {
        pnlAlgorithms.removeAll();
        int finalHeigth = 0;
        for (int i = 1; i < 58; i++) {
            pnlAlgorithms.add(new SelectableAlgElement(i, true));
            finalHeigth += 29;
        }
        lblHint.setText(_ollHint);
        pnlAlgorithms.setPreferredSize(new Dimension(120, finalHeigth));
    }
    /**
     * Adds a selectable element to th scroll panel for every PLL case.
     */
    private void addPlls() {
        pnlAlgorithms.removeAll();
        int finalHeight = 0;
        for (int i = 1; i < 22; i++) {
            pnlAlgorithms.add(new SelectableAlgElement(i, false));
            finalHeight += 29;
        }
        lblHint.setText(_pllHInt);
        pnlAlgorithms.setPreferredSize(new Dimension(120, finalHeight));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSelect = new javax.swing.JButton();
        btnDeselect = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        lblHint = new javax.swing.JLabel();
        scrllAlgsContainer = new javax.swing.JScrollPane();
        pnlAlgorithms = new javax.swing.JPanel();
        btnRedoOll = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(600, 380));

        btnSelect.setText("Select All");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        btnDeselect.setText("Select None");
        btnDeselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeselectActionPerformed(evt);
            }
        });

        btnNext.setText("Set up PLL");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        lblHint.setText("<html><body><p align=\"justify\">All right, here's the deal: choose the OLL<br>\nalgorithms you want to go over in this<br>\"session\".<br><br>Not quite feeling like OLL right now?<br>Select none of the elements in the list<br>and go set up PLL.</p></body></html>");

        pnlAlgorithms.setBorder(null);
        pnlAlgorithms.setMaximumSize(new java.awt.Dimension(32767, 100000));
        pnlAlgorithms.setPreferredSize(new java.awt.Dimension(120, 100));
        scrllAlgsContainer.setViewportView(pnlAlgorithms);

        btnRedoOll.setText("<html><body>Go back<br>to OLL</body></html>");
        btnRedoOll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRedoOllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblHint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeselect)
                    .addComponent(btnSelect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrllAlgsContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNext)
                    .addComponent(btnRedoOll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnSelect)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDeselect)
                                .addGap(52, 52, 52)
                                .addComponent(lblHint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRedoOll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)))
                        .addComponent(btnNext))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(scrllAlgsContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        if (_settingOll) {
            _selectedOlls.clear();
            for (Component c : pnlAlgorithms.getComponents()) {
                SelectableAlgElement el = (SelectableAlgElement)c;
                if (el.isIncluded())
                    _selectedOlls.add(el.getPattern());
            }
            pnlAlgorithms.removeAll();
            addPlls();
            for (Component c : pnlAlgorithms.getComponents()) {
                SelectableAlgElement el = (SelectableAlgElement)c;
                if (_selectedPlls.contains(el.getPattern()))
                    el.include();
            }
            btnRedoOll.setVisible(true);
            btnNext.setText("Begin practice");
            _settingOll = false;
        } else {
            _selectedPlls.clear();
            for (Component c : pnlAlgorithms.getComponents()) {
                SelectableAlgElement el = (SelectableAlgElement)c;
                if (el.isIncluded())
                    _selectedPlls.add(el.getPattern());
            }
            if (_selectedOlls.isEmpty() & _selectedPlls.isEmpty()) {
                JOptionPane.showMessageDialog(null, "You know you need to choose at least one pattern to practice", "C'mon now...", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            dispose();
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        for (Component c : pnlAlgorithms.getComponents()) {
            ((SelectableAlgElement)c).include();
        }
    }//GEN-LAST:event_btnSelectActionPerformed

    private void btnDeselectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeselectActionPerformed
        for (Component c : pnlAlgorithms.getComponents()) {
            ((SelectableAlgElement)c).exclude();
        }
    }//GEN-LAST:event_btnDeselectActionPerformed

    private void btnRedoOllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedoOllActionPerformed
        for (Component c : pnlAlgorithms.getComponents()) {
            SelectableAlgElement el = (SelectableAlgElement)c;
            if (el.isIncluded())
                _selectedPlls.add(el.getPattern());
        }
        addOlls();
        for (Component c : pnlAlgorithms.getComponents()) {
            SelectableAlgElement el = (SelectableAlgElement)c;
            if (_selectedOlls.contains(el.getPattern()))
                el.include();
        }
        btnNext.setText("Setup PLL");
        btnRedoOll.setVisible(false);
        _settingOll = true;
    }//GEN-LAST:event_btnRedoOllActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeselect;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnRedoOll;
    private javax.swing.JButton btnSelect;
    private javax.swing.JLabel lblHint;
    private javax.swing.JPanel pnlAlgorithms;
    private javax.swing.JScrollPane scrllAlgsContainer;
    // End of variables declaration//GEN-END:variables
}
