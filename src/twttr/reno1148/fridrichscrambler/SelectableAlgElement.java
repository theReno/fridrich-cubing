/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package twttr.reno1148.fridrichscrambler;

import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

/**
 * Use this simple control to represent algorithms in friendly way so the user
 * can easily select them.
 * @author theReno
 */
public class SelectableAlgElement extends javax.swing.JPanel {

    /**
     * Create a new algorithm control.
     * @param pathToIcon The absolute path to the file containing the pattern
     * image to display.
     */
    private Color _defaultBackground;
    private final String _ollPatternsPath = "/twttr/reno1148/fridrichscrambler/ollpatts/";
    private final String _pllPatternsPath = "/twttr/reno1148/fridrichscrambler/pllpatts/";
    private int _pattern;
    
    public SelectableAlgElement(int patternNumber, boolean isOll) {
        initComponents();
        _pattern = patternNumber;
        lblPattern.setText("");
        if (isOll)
            lblPattern.setIcon(new ImageIcon(getClass().getResource(_ollPatternsPath + patternNumber + ".png")));
        else
            lblPattern.setIcon(new ImageIcon(getClass().getResource(_pllPatternsPath + patternNumber + ".png")));
        _defaultBackground = this.getBackground();
        chkInclude.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                formMouseEntered(e);
            }
            @Override
            public void mouseExited(MouseEvent e) {
                formMouseExited(e);
            }
        });
    }
    /**
     * @return {@code true} if this algorithm was selected for practice, {@code
     * false} otherwise
     */
    public boolean isIncluded() {
        return chkInclude.isSelected();
    }
    /**
     * Remove this algorithm from the user's choices.
     */
    public void exclude() {
        chkInclude.setSelected(false);
    }
    /**
     * Add this algorithm to the user's choices.
     */
    public void include() {
        chkInclude.setSelected(true);
    }
    /**
     * @return The pattern represented in this element.
     */
    public int getPattern() {
        return _pattern;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chkInclude = new javax.swing.JCheckBox();
        lblPattern = new javax.swing.JLabel();

        setBorder(null);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });

        lblPattern.setIcon(new javax.swing.ImageIcon(getClass().getResource("/twttr/reno1148/fridrichscrambler/ollpatts/1.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(chkInclude)
                .addGap(1, 1, 1)
                .addComponent(lblPattern))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(chkInclude))
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(lblPattern))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        chkInclude.setSelected(!chkInclude.isSelected());
    }//GEN-LAST:event_formMouseClicked

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        this.setBackground(Color.WHITE);
        chkInclude.setBackground(Color.WHITE);
    }//GEN-LAST:event_formMouseEntered

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        //sorry about not bothering to find a better way to provide visual feedback
        this.setBackground(_defaultBackground);
        chkInclude.setBackground(_defaultBackground);
    }//GEN-LAST:event_formMouseExited

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkInclude;
    private javax.swing.JLabel lblPattern;
    // End of variables declaration//GEN-END:variables
}
